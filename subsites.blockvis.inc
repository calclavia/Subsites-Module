<?php
/* $Id: subsites.blockvis.inc,v 1.2 2009/11/05 20:23:35 davyvandenbremt Exp $ */

/**
 * Determine block visibility based on some options (subsites).
 *
 * @param $options
 *   String (Serialized array); An array of options with a 'subsites' key. The 'subsites' element defines the subsites to show the block on.
 * @return
 *   Boolean; TRUE if visible; FALSE if not.
 */
function subsites_block_visibility($options) {
  $options = unserialize($options);

  $subsites = $options['subsites'];

  $current = subsites_get_current();

  if (in_array($current, $subsites)) return TRUE;

  return FALSE;
}

/**
 * Parse the PHP block visibility code.
 *
 * @param $code
 *   String; Block visibility code.
 * @return
 *   Boolean or string; FALSE if parsing had errors. The serialized array of options if it succeeded.
 */
function subsites_parse_block_visibility($code) {
  $matches = array();
  preg_match('/\$options = \'(.*)\';/', $code, $matches);
  if (count($matches > 1)) {
    return unserialize($matches[1]);
  }

  return FALSE;
}

/**
 * Form alter -- Add an extra block visibility option to block add form.
 */
function subsites_form_block_add_block_form_alter(&$form, $form_state) {
  subsites_form_alter_block_visibility($form, $form_state, $form_id);
}

/**
 * Form alter -- Add an extra block visibility option to block configure form.
 */
function subsites_form_block_admin_configure_alter(&$form, $form_state) {
  subsites_form_alter_block_visibility($form, $form_state, $form_id);
}

/**
 * Form alter -- Add an extra block visibility option to block add or configure form.
 */
function subsites_form_alter_block_visibility(&$form, $form_state, $form_id) {
  $pages = $form['page_vis_settings']['pages']['#default_value'];
  $options = subsites_parse_block_visibility($pages);

  drupal_add_js(drupal_get_path('module', 'subsites') .'/subsites.js');

  $form['page_vis_settings']['visibility']['#options'][] = t('Show only on specific subsites.');
  $form['page_vis_settings']['advanced_visibility_fieldset'] = array(
    '#attributes' => array('id' => 'advanced-visibility'),
    '#type' => 'fieldset',
    '#access' => user_access('use PHP for block visibility'),
    '#title' => t('Subsites'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#weight' => 20,
  );
  $form['page_vis_settings']['advanced_visibility_fieldset']['subsites'] = array(
    '#type' => 'select',
    '#title' => t('Subsites'),
    '#options' => _subsites_select_options(),
    '#multiple' => TRUE,
    '#default_value' => $options['subsites'],
  );

  $form['#submit'][] = 'subsites_block_visibility_submit';
  $form['#submit'] = array_reverse($form['#submit']);
}

/**
 * Submit handler -- Handle extra block visibility option.
 */
function subsites_block_visibility_submit($form, &$form_state) {
  if ($form_state['values']['visibility'] == 3) {
    $options = array();
    $options['subsites'] = $form_state['values']['subsites'];
    $php = '';
    $php .= '<?php '. PHP_EOL;
    $php .= '// Automatically generated by advanced block visibility settings'. PHP_EOL;
    $php .= 'if (module_exists(\'subsites\')) {'. PHP_EOL;
    $php .= '$options = \''. serialize($options) .'\';'. PHP_EOL;
    $php .= 'return subsites_block_visibility($options);'. PHP_EOL;
    $php .= '}'. PHP_EOL;
    $php .= '?>';

    $form_state['values']['pages'] = $php;
  }
}